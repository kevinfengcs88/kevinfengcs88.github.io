"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _icons = require("../icons");

var _utils = require("../../utils");

const generateBuildLogUrl = ({
  orgId,
  siteId,
  buildId
}) => {
  let pathToBuildLogs = ``;

  if (!buildId) {
    pathToBuildLogs = `https://www.gatsbyjs.com/dashboard/${orgId}/sites/${siteId}/cmsPreview`;
  } else {
    pathToBuildLogs = `https://www.gatsbyjs.com/dashboard/${orgId}/sites/${siteId}/builds/${buildId}/details`;
  }

  const returnTo = encodeURIComponent(pathToBuildLogs);
  return `${pathToBuildLogs}?returnTo=${returnTo}`;
};

const BuildErrorTooltipContent = ({
  siteId,
  orgId,
  buildId
}) => {
  const {
    track
  } = (0, _utils.useTrackEvent)();
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, _icons.failedIcon, `Unable to build preview`, /*#__PURE__*/_react.default.createElement("a", {
    href: generateBuildLogUrl({
      orgId,
      siteId,
      buildId
    }),
    target: "_blank",
    rel: "noreferrer",
    onClick: () => {
      track({
        eventType: `PREVIEW_INDICATOR_CLICK`,
        orgId,
        siteId,
        buildId,
        name: `error logs`
      });
    },
    "data-gatsby-preview-indicator": "tooltip-link"
  }, /*#__PURE__*/_react.default.createElement("p", {
    "data-gatsby-preview-indicator": "tooltip-link-text"
  }, `View logs`), /*#__PURE__*/_react.default.createElement("div", {
    "data-gatsby-preview-indicator": "tooltip-svg"
  }, _icons.logsIcon)));
};

var _default = BuildErrorTooltipContent;
exports.default = _default;